apiVersion: 1.0.0
metadata:
  generateName: chapeaux-
projects:
  - name: cpx-components
    source:
      location: 'https://github.com/chapeaux/cpx-components.git'
      type: github
components:
  - id: vscode/typescript-language-features/latest
    type: chePlugin
  - reference: "https://raw.githubusercontent.com/chapeaux/cpx-components/main/plugins/openshift-connector.yaml"
    type: chePlugin
    alias: openshift-connector
  - reference: "https://raw.githubusercontent.com/chapeaux/cpx-components/main/plugins/deno.yaml"
    type: chePlugin
    alias: deno-che
  - mountSources: true
    endpoints:
      - name: deno-svc
        port: 8000
    memoryLimit: 512Mi
    type: dockerimage
    alias: deno
    image: 'quay.io/ldary/deno-crw'
commands:
  - name: RUN the component server
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno run --unstable --allow-net --allow-read server.ts
        component: deno
  - name: TEST the components
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno test --allow-net --allow-read
        component: deno
  - name: LINT the components
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno lint --json > data/lint.json
        component: deno
  - name: FORMAT scripts
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno fmt
        component: deno
  - name: DOCUMENT components
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno doc --json > data/docs.json
        component: deno
  - name: DEBUG the component server
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno run --inspect --unstable --allow-net --allow-read server.ts
        component: deno
  - name: BUILD the components
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/cpx-components/'
        type: exec
        command: deno run --unstable --allow-net --allow-read --allow-write bundle.ts
        component: deno
  - name: STOP the component server
    actions:
      - type: exec
        command: 'deno_server_pids=$(pgrep -fx ''.*deno (--inspect ) --allow-net --allow-read ?server.ts'' | tr "\\n" " ") && echo "Stopping deno server with PIDs: ${deno_server_pids}" &&  kill -15 ${deno_server_pids} &>/dev/null && echo ''Done.'''
        component: deno
